// Задача 1 
// Какое будет выведено значение:

// let i = 5 ; alert(i++) // 5
// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 2
// Чему равно такое выражение: [] + false - null + true // ответ: NaN

// [] пустые скобки будут приведены к значению строки(пустой строки)
// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 3
// Что выведет этот код: let y = 1 ; let x = y = 2; alert(x)

let y = 1 ; 
let x = y = 2; // тут происходит последовательное присваивание(справа налево)
// alert(x)
// Ответ: 2
// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 4
// Чему равна сумма: [] + 1 + 2 
// Ответ: '12'
// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 5

// Что выведет сделущий код: alert("1"[0])

// Ответ: '1'

// - - - - - - - - - - - - - - - - - - - - - - - - - -


// Задача 6

// Чему равно: 2 && 1 && null && 0 && undefined
// Оператор && всегда запинается(останавливается) на лжи, и возвращает это значение

// Ответ: null

// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 7
// Есть ли разница между выражениями? !!(a && b) и (a && b)

// Для наглядности поменяем значения a и b 
// console.log(!!(1 && 2)); // в данном случае возвращается булевое значение
// console.log((1 && 2)); // а в данном возвращается последнее правдивое выражение, т.е 2 
// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 8

// Чему равно alert( null || 2 && 3 || 4) // Ответ: 3
// Оператор || всегда запинается на правде

// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 8

const some1 = [1,2,3]
const some2 =[1,2,3]
// Правда ли что some1 == some2 
// Ответ: false
// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 9

// Что выведет код alert(+"infinity") // Ответ: infinity
// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 10

// Верно ли сравнение "Ёжик" > "яблоко" 
// Ответ: false
// - - - - - - - - - - - - - - - - - - - - - - - - - -

// Задача 10

// Чему равно: 0 || "" || 2 || undefined || true || false
// Ответ: 2
// Оператор || всегда останавливается на правде, и дальше не идёт












